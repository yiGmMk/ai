<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>RAG on AI</title>
        <link>https://ai.programnotes.cn/tags/rag/</link>
        <description>Recent content in RAG on AI</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Tue, 29 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ai.programnotes.cn/tags/rag/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>微软为 Edge 浏览器推出新的 Copilot 模式</title>
        <link>https://ai.programnotes.cn/p/%E5%BE%AE%E8%BD%AF%E4%B8%BA-edge-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A8%E5%87%BA%E6%96%B0%E7%9A%84-copilot-%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ai.programnotes.cn/p/%E5%BE%AE%E8%BD%AF%E4%B8%BA-edge-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A8%E5%87%BA%E6%96%B0%E7%9A%84-copilot-%E6%A8%A1%E5%BC%8F/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/en-us/edge/ai-powered/copilot-mode&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.microsoft.com/en-us/edge/ai-powered/copilot-mode&lt;/a&gt;
微软为其 Edge 浏览器推出了一种名为“Copilot Mode”的全新模式，旨在提供一种由 AI 驱动的网页浏览体验，最亮眼的是其多标签RAG和视觉辅助能力。&lt;/p&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1Sr8DzHEqq&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

</description>
        </item>
        <item>
        <title>MCP 实践：基于 MCP 架构实现知识库答疑系统</title>
        <link>https://ai.programnotes.cn/p/mcp-%E5%AE%9E%E8%B7%B5%E5%9F%BA%E4%BA%8E-mcp-%E6%9E%B6%E6%9E%84%E5%AE%9E%E7%8E%B0%E7%9F%A5%E8%AF%86%E5%BA%93%E7%AD%94%E7%96%91%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ai.programnotes.cn/p/mcp-%E5%AE%9E%E8%B7%B5%E5%9F%BA%E4%BA%8E-mcp-%E6%9E%B6%E6%9E%84%E5%AE%9E%E7%8E%B0%E7%9F%A5%E8%AF%86%E5%BA%93%E7%AD%94%E7%96%91%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;img src="https://ai.programnotes.cn/img/ai/f638b06be79e867e0b58aea871dbe210.other" alt="Featured image of post MCP 实践：基于 MCP 架构实现知识库答疑系统" /&gt;&lt;p&gt;&lt;strong&gt;源自&lt;/strong&gt; |  木洛  阿里云开发者   2025-04-21 08:30&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3fc021abc05c740356ba477775280a7e.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;文章探讨了AI Agent的发展趋势，并通过一个实际案例展示了如何基于MCP（Model Context Protocol）开发一个支持私有知识库的问答系统。&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;业界推测 2025 年是 AI Agent 的元年，从目前的技术发展速度看确实是有这个趋势。从年初 DeepSeek 的爆火开始，目前开源大模型的能力基本与商业大模型拉齐甚至是超越，完全开放的开源策略让大模型的使用彻底平权。这个可以说在某种程度上改变了 AI 应用的商业模式，基于自训练的闭源模型的优势被显著削弱，商业竞争从模型性能转向对应用场景的创新。&lt;/p&gt;
&lt;p&gt;AI 应用的形态不断演进，从早期的 Chat 到 RAG，再到现在的 Agent。参考 Web 2.0 和移动互联网时代的技术发展，当某种新形态的应用开发需求爆发式增长，会催生新的开发框架和新的标准的建立，AI 应用正在经历这个过程。&lt;/p&gt;
&lt;p&gt;目前开发框架还处于百花齐放的状态，Python 是否会成为主流开发语言，哪个开发框架会成为主流，这些都还未知，有待观望。但是近期比较火热的 MCP（Model Context Protocol）看起来已成事实标准，特别是近期 OpenAI 也官宣了对 MCP 的支持。&lt;/p&gt;
&lt;p&gt;关于 MCP 的介绍不在本文赘述，本着学习的目的，动手做了一个实践，主要为了体验如何基于 MCP 开发一个 Agent 应用。本次实践会实现一个目前最常见的一类 AI 应用即答疑系统，支持基于私有知识库的问答，会对知识库构建和 RAG 做一些优化。&lt;/p&gt;
&lt;h2 id=&#34;整体流程设计&#34;&gt;整体流程设计
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/f638b06be79e867e0b58aea871dbe210.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;主要分为两部分：知识库构建和检索。&lt;/p&gt;
&lt;p&gt;1.知识库构建&lt;/p&gt;
&lt;p&gt;a.文本切段：对文本进行切段，切段后的内容需要保证文本完整性以及语义完整性。&lt;/p&gt;
&lt;p&gt;b.提取 FAQ：根据文本内容提取 FAQ，作为知识库检索的一个补充，以提升检索效果。&lt;/p&gt;
&lt;p&gt;c.导入知识库：将文本和 FAQ 导入知识库，并进行 Embedding 后导入向量。&lt;/p&gt;
&lt;p&gt;2.知识检索（RAG）&lt;/p&gt;
&lt;p&gt;a.问题拆解：对输入问题进行拆解和重写，拆解为更原子的子问题。&lt;/p&gt;
&lt;p&gt;b.检索：针对每个子问题分别检索相关文本和 FAQ，针对文本采取向量检索，针对 FAQ 采取全文和向量混合检索。&lt;/p&gt;
&lt;p&gt;c.知识库内容筛选：针对检索出来的内容进行筛选，保留与问题最相关的内容进行参考回答。&lt;/p&gt;
&lt;p&gt;相比传统的 Naive RAG，在知识库构建和检索分别做了一些常见的优化，包括 Chunk 切分优化、提取 FAQ、Query Rewrite、混合检索等。&lt;/p&gt;
&lt;h2 id=&#34;agent-架构&#34;&gt;Agent 架构
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/91804ab66e9fd319dc43564e2bb76b9e.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;整体架构分为三个部分：&lt;/p&gt;
&lt;p&gt;1.知识库：内部包含 Knowledge Store 和 FAQ Store，分别存储文本内容和 FAQ 内容，支持向量和全文的混合检索。&lt;/p&gt;
&lt;p&gt;2.MCP Server：提供对 Knowledge Store 和 FAQ Store 的读写操作，总共提供 4 个 Tools。&lt;/p&gt;
&lt;p&gt;3.功能实现部分：完全通过 Prompt + LLM 来实现对知识库的导入、检索和问答这几个功能。&lt;/p&gt;
&lt;p&gt;具体实现&lt;/p&gt;
&lt;p&gt;所有代码开源在这里，分为两部分：&lt;/p&gt;
&lt;p&gt;1.Python 实现的 Client 端：实现了与大模型进行交互，通过 MCP Client 获取 Tools，根据大模型的反馈调用 Tools 等基本能力。通过 Prompt 实现了知识库构建、检索和问答三个主要功能。&lt;/p&gt;
&lt;p&gt;2.Java 实现的 Server 端：基于 Spring AI 框架实现 MCP Server，由于底层存储用的是 Tablestore，所以主体框架是基于这篇文章的代码进行改造。&lt;/p&gt;
&lt;h2 id=&#34;知识库存储&#34;&gt;&lt;strong&gt;知识库存储&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;知识库存储选择 Tablestore（向量检索功能介绍），主要原因为：&lt;/p&gt;
&lt;p&gt;1.简单易用：仅一个创建实例步骤后即可开始使用，Serverless 模式无需管理容量和后续运维。&lt;/p&gt;
&lt;p&gt;2.低成本：完全按量计费，自动根据存储规模水平扩展，最大可扩展至 PB 级。当然如果采用本地知识库肯定是零成本，但这里实现的是一个企业级、可通过云共享的知识库。&lt;/p&gt;
&lt;p&gt;3.功能完备：支持全文、向量和标量等检索功能，支持混合检索。&lt;/p&gt;
&lt;h2 id=&#34;mcp-server&#34;&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;实现了 4 个 Tools（具体注册代码可参考 TablestoreMcp），相关描述如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/af20093202c3d68e029c5226065a37f5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/b19d52ce3bd446bf4b2af7a3e289d3eb.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;知识库构建&#34;&gt;&lt;strong&gt;知识库构建&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;1、对文本进行切段并提取 FAQ&lt;/p&gt;
&lt;p&gt;完全通过提示词来完成，可根据自己的要求进行调优。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/02866b7b0db46ad6a861470e49e5b0d1.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/137ae3c8f93b6efc3762ede20bfd0a35.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/cd6243e70c4c925b44b5162e8dd56234.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;以上是一个示例，可以看到通过大模型能比较准确的对文本进行切段并提取 FAQ。这种方式的优势是切段的文本能保证完整性以及语义一致性，能够比较灵活的对格式做一些处理。提取的 FAQ 很全面，对于简单问题的问答通过直接搜索 FAQ 是最准确直接的。最大的缺点就是执行比较慢并且成本较高，一次会消耗大量的 Token，不过好在是一次性的投入。&lt;br&gt;
2、写入知识库和 FAQ 库&lt;/p&gt;
&lt;p&gt;这一步也是通过提示词来完成，基于 MCP 架构可以非常简单的实现，样例如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/bd78cf1ba477ac92ee1c41cafbe9db61.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;知识库检索&#34;&gt;&lt;strong&gt;知识库检索&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;同样这一步也是通过提示词加 MCP 来实现，非常的简单，样例如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/6275fc2275e1fd0f7a441f54e33049a1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;通过提示词描述实现了一个稍微复杂点的检索：&lt;/p&gt;
&lt;p&gt;1.先对问题进行拆解，拆解为更原子的子问题。&lt;/p&gt;
&lt;p&gt;2.每个子问题分别检索知识库和 FAQ，检索结果汇总后筛选留下与问题最相关的内容。&lt;/p&gt;
&lt;p&gt;3.按照格式返回结果。&lt;/p&gt;
&lt;h2 id=&#34;知识库问答&#34;&gt;&lt;strong&gt;知识库问答&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;直接看下提示词和效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/7b5962d794b305bc6241925af02cb004.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从 MCP Server 的 Log 内可以看到自动调用了知识库和 FAQ 的检索工具，并能根据之前导入的内容进行回答。&lt;/p&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、创建知识库存储实例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可通过命令行工具（&lt;br&gt;
下载地址&lt;br&gt;
）来创建 Tablestore 实例，参考&lt;br&gt;
这个文档&lt;br&gt;
先进行配置。&lt;/p&gt;
&lt;p&gt;配置成功后执行以下命令进行实例创建，实例名自行选择，需要保证 Region 内唯一。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/af1cc9d9876626a858877e2e42b9d070.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、启动 MCP Server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;启动前需要在环境变量内配置如下几个参数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/944292e4d4cf3c1b9a8583cdcf96a9b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可参考代码库 README 内的步骤进行启动，也可将项目导入 IDE 后直接运行 App 这个类，启动后会自动初始化表和索引。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、导入知识库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这一步需要执行代码库内的 knowledge_manager.py 工具，执行前需要先配置访问大模型的 API-KEY，默认采用 qwen-max。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LLM_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxxxxx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;请自行准备知识库文档，使用 markdown 格式，执行如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/a093c838ba94f16a2f4100f106b95766.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、检索知识库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/49f4093840580d3e46826e8fb096eb7a.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、基于知识库进行问答&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/827427675199578dbb949d3c2c1c285d.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后
&lt;/h2&gt;&lt;p&gt;对应前言部分的观点，这一轮技术革命可以参考 Web 2.0 和移动互联网时代的技术发展，当某种新形态的应用开发需求爆发式增长，一定会催生新的开发框架和新的标准的建立。AI 应用的技术是能够完全构建在当前的技术框架之上，所以发展迭代的速度非常之快，很期待未来的发展。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;构建OLAP全场景，揭秘实时/离线数仓一体化架构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;随着企业的业务数据量和数据源不断增加，分析的难度和复杂度显著提升。AnalyticDB MySQL 提供了一个能整合多类型数据源，确保数据的一致性和完整性、高效的数据分析平台， 支持复杂查询和分析需求，能够快速洞察数据价值，更好地支撑业务决策。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>一文秒懂AI核心：Agent、RAG、Function Call与MCP全解析</title>
        <link>https://ai.programnotes.cn/p/%E4%B8%80%E6%96%87%E7%A7%92%E6%87%82ai%E6%A0%B8%E5%BF%83agentragfunction-call%E4%B8%8Emcp%E5%85%A8%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Wed, 02 Apr 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ai.programnotes.cn/p/%E4%B8%80%E6%96%87%E7%A7%92%E6%87%82ai%E6%A0%B8%E5%BF%83agentragfunction-call%E4%B8%8Emcp%E5%85%A8%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;p&gt;&lt;strong&gt;源自&lt;/strong&gt; | suke 技术源share&lt;/p&gt;
&lt;p&gt;核心内容:
- Agent是目标导向的项目经理/大脑，负责规划和协调任务执行。
- RAG和Function Call是Agent的工具，RAG负责检索外部知识，Function Call负责调用外部函数。
- MCP是标准化的通信协议，方便Agent与各种工具交互。&lt;/p&gt;
&lt;p&gt;如今大语言模型（LLM）的风头一时无两，它们能写诗、能聊天、能编程，简直无所不能！但你有没有发现，有时候它们也挺“傻白甜”的？比如问它今天的天气，它可能给你一个“根据我的知识库&amp;hellip;”的过时答案；让它帮你整理本地文件，它只能表示爱莫能助。&lt;/p&gt;
&lt;p&gt;这是因为 LLM 本身像一个博学但与世隔绝的大脑。为了让它真正变得实用、能干，连接现实世界，科技圈祭出了几大“法宝”：&lt;strong&gt;Agent（智能体）、RAG（检索增强生成）、Function Call（函数调用）&lt;/strong&gt;&lt;br&gt;
，以及一个新晋的潜力股——&lt;strong&gt;MCP（模型上下文协议）&lt;/strong&gt;&lt;br&gt;
。&lt;/p&gt;
&lt;p&gt;今天，我们就用大白话+生动比喻，带你一次搞懂这四大金刚，看看它们是如何协同作战，让 AI 从“理论派”变身“实干家”的！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;🔗 懒人直看版&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一图胜千言，我们用一个表格来总结下它们的关系和区别：&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));&#34;&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;特性&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;MCP (模型上下文协议)&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;RAG (检索增强生成)&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;Agent (智能体)&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;Function Call (函数调用)&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));&#34;&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;核心思想&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;标准化 AI 与外部数据/工具的&lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;通信协议&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;检索&lt;/span&gt;&lt;/strong&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;外部知识 + &lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;增强&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&#34;&#34;&gt;提示 + &lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;生成&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&#34;&#34;&gt;回答&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;LLM驱动的&lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;自主决策&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&#34;&#34;&gt;与&lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;任务执行&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&#34;&#34;&gt;系统&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;LLM&lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;请求执行&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&#34;&#34;&gt;外部预定义函数/工具的能力&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));&#34;&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;本质&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;协议/规范&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;技术框架/方法&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;系统/应用范式&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;模型能力/特性&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));&#34;&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;通俗比喻&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;标准化的 USB 接口&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;写论文前先查资料&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;能干的私人助理&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;助理按指令使用 App&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));&#34;&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;关系链&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;可作为 Agent 调用工具的&lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;底层标准&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;常被 Agent &lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;用作&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&#34;&#34;&gt;获取知识的手段&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;核心指挥官&lt;/span&gt;&lt;/strong&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;，使用 RAG/Function Call 等工具&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td style=&#34;box-sizing: border-box;border: 1px solid rgb(223, 223, 223);text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: 14px;padding: 0.25em 0.5em;color: rgb(63, 63, 63);word-break: keep-all;&#34;&gt;&lt;section&gt;&lt;span leaf=&#34;&#34;&gt;Agent 执行具体动作的&lt;/span&gt;&lt;strong style=&#34;box-sizing: border-box;border-width: 0px;border-style: solid;border-color: hsl(var(--border));font-weight: bold;text-align: left;line-height: 1.75;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;#34;PingFang SC&amp;#34;, Cambria, Cochin, Georgia, Times, &amp;#34;Times New Roman&amp;#34;, serif;font-size: inherit;color: rgb(15, 76, 129);&#34;&gt;&lt;span leaf=&#34;&#34;&gt;基本手段&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;  
&lt;p&gt;&lt;strong&gt;简单来说，它们的关系就像：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;Agent (智能体)&lt;/strong&gt;&lt;br&gt;
 是那个目标导向的&lt;strong&gt;项目经理/大脑&lt;/strong&gt;&lt;br&gt;
。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;RAG&lt;/strong&gt;&lt;br&gt;
 和 &lt;strong&gt;Function Call&lt;/strong&gt;&lt;br&gt;
 是它工具箱里的&lt;strong&gt;得力工具&lt;/strong&gt;&lt;br&gt;
：RAG 负责查资料、找依据；Function Call 负责执行具体操作、调用外部 API。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;MCP&lt;/strong&gt;&lt;br&gt;
 则致力于提供一个&lt;strong&gt;标准化的接口规范&lt;/strong&gt;&lt;br&gt;
，让 Agent 能更方便、更统一地接入和使用各种工具（无论是 RAG 功能还是其他 Function Call 实现的工具）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;💡 Function Call：给AI装上“遥控器”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/5eefbbbb74bc049c11ce49b0a322610f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;****- • &lt;strong&gt;这是啥？&lt;/strong&gt;&lt;br&gt;
 Function Call 是 LLM 的一项内置“特异功能”。它允许 LLM 在需要的时候，&lt;strong&gt;请求&lt;/strong&gt;&lt;br&gt;
外部程序帮它做点事。注意，是“请求”，不是“亲自做”。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;为啥要它？&lt;/strong&gt;&lt;br&gt;
 因为 LLM 自己查不了实时股价、订不了机票、发不了邮件。有了 Function Call，LLM 就能“指挥”其他工具来完成这些操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;通俗比喻：&lt;/strong&gt;&lt;br&gt;
 就像你让智能音箱帮你“查下今天北京天气”。音箱（LLM）自己感知不到天气，但它知道要去调用“天气查询”这个App（预定义的函数/工具）。它生成指令（“查北京天气”），App 执行后把结果（“晴，25度”）告诉音箱，音箱再用自然语言告诉你。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;简单例子：&lt;/strong&gt;&lt;br&gt;
 你问 AI：“AAPL 股价多少？” AI 判断需要查实时数据，于是生成一个“请求”：{调用函数: &amp;ldquo;查股价&amp;rdquo;, 参数: {&amp;ldquo;股票代码&amp;rdquo;: &amp;ldquo;AAPL&amp;rdquo;}}&lt;br&gt;
。外部程序收到请求，查询API，返回结果 {&amp;ldquo;价格&amp;rdquo;: 180.50}&lt;br&gt;
。AI 再根据这个结果回答你：“苹果当前股价是 180.50 美元。”&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;🔍 RAG：AI的“开卷考试”神器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/d2165d86f96f781db449512a85b5a850.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;****- • &lt;strong&gt;这是啥？&lt;/strong&gt;&lt;br&gt;
 RAG (Retrieval-Augmented Generation) 是一种让 AI 回答更靠谱的技术框架。简单说，就是在 AI 回答问题 &lt;br&gt;
之前&lt;br&gt;
，先让它去指定的资料库（比如公司内部文档、最新的行业报告）里&lt;strong&gt;查找 (Retrieval)&lt;/strong&gt;&lt;br&gt;
 相关信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;为啥要它？&lt;/strong&gt;&lt;br&gt;
 防止 AI一本正经地“胡说八道”（专业术语叫“幻觉”），让它的回答基于最新的、准确的、特定的事实依据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;通俗比喻：&lt;/strong&gt;&lt;br&gt;
 好比你写论文要引用最新数据。你不会光凭记忆（LLM 的内部知识）瞎写，而是会先去图书馆或数据库&lt;strong&gt;查资料 (检索)&lt;/strong&gt;&lt;br&gt;
，把找到的关键信息&lt;strong&gt;整合 (增强)进你的论据里，最后才下笔写作 (生成)&lt;/strong&gt;&lt;br&gt;
。RAG 就是让 AI 也学会这种“先查再答”的好习惯。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;简单例子：&lt;/strong&gt;&lt;br&gt;
 你问 AI：“我们公司最新的报销政策是啥？” RAG 系统先去公司内部知识库&lt;strong&gt;检索&lt;/strong&gt;&lt;br&gt;
“报销政策”文档，找到相关段落。然后把这些段落和你的问题一起“喂”给 AI，AI &lt;strong&gt;参考&lt;/strong&gt;&lt;br&gt;
着这些最新政策，给你一个准确的回答。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;🤖 Agent：AI界的“全能管家”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/725889adde5abec549897fa6f635e7a9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;****- • &lt;strong&gt;这是啥？&lt;/strong&gt;&lt;br&gt;
 Agent（智能体）是一个更高级、更自主的 AI 系统。它以 LLM 作为核心“大脑”，不仅能理解你的目标，还能自己&lt;strong&gt;思考、规划步骤&lt;/strong&gt;&lt;br&gt;
，并&lt;strong&gt;主动调用工具&lt;/strong&gt;&lt;br&gt;
（比如上面说的 RAG 和 Function Call）来执行任务，与外部环境互动。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;为啥要它？&lt;/strong&gt;&lt;br&gt;
 为了完成那些光靠聊天解决不了的复杂任务，比如“帮我规划下周去上海的出差行程，包括订机票酒店，并把日程发给我”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;通俗比喻：&lt;/strong&gt;&lt;br&gt;
 Agent 就像一个&lt;strong&gt;超级能干的私人助理&lt;/strong&gt;&lt;br&gt;
。你给个目标，它自己就能拆解任务、查信息（可能用 RAG 查公司差旅标准，用 Function Call 查航班酒店）、做决策、执行操作（用 Function Call 调用预订 API），最后给你结果。它是有自主“行动力”的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;简单例子：&lt;/strong&gt;&lt;br&gt;
 你让 Agent：“分析一下竞品 X 的最新动态，写个简报。” Agent 会自己规划：① 搜索最新新闻（调用 Function Call）；② 查内部研究报告（调用 RAG）；③ 分析总结信息（LLM 大脑）；④ 生成简报（调用 Function Call）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;🔌 MCP：AI与工具间的“通用插座标准”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/bfc6913e19e42985e80d9652c7fff906.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;****- • &lt;strong&gt;这是啥？&lt;/strong&gt;&lt;br&gt;
 MCP (Model Context Protocol) 是 Anthropic 公司（就是搞出 Claude 那个）在 2024 年底提出并开源的一种&lt;strong&gt;标准化通信协议&lt;/strong&gt;&lt;br&gt;
。它定义了一套规则，让 AI 应用（客户端）能以统一的方式，与各种外部数据源或工具（服务器）进行交互。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;为啥要它？&lt;/strong&gt;&lt;br&gt;
 想象一下，如果每个工具都有自己独特的接口，那 Agent 想用多个工具时，岂不是要学 N 种“方言”？MCP 就是想统一这个接口标准，让工具“即插即用”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;通俗比喻：&lt;/strong&gt;&lt;br&gt;
 MCP 就像是给 AI 大脑和外部工具之间制定了一个&lt;strong&gt;通用的 USB 接口标准&lt;/strong&gt;&lt;br&gt;
。无论是本地文件系统、数据库，还是 Slack、GitHub 这些应用，只要它们提供符合 MCP 标准的“服务器”，AI 应用（客户端）就能轻松连接并使用它们的功能，无需为每个工具单独适配。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;简单例子：&lt;/strong&gt;&lt;br&gt;
 在支持 MCP 的编辑器里，你可以让 AI“把我 /docs&lt;br&gt;
 目录最新的 Markdown 文件总结一下，发到 Slack 的 #general&lt;br&gt;
 频道”。编辑器（MCP 客户端）通过 MCP 协议，与本地的“文件系统 MCP 服务器”和“Slack MCP 服务器”沟通，协调完成整个任务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;•&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;支持 MCP 的客户端/服务器:&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;客户端:&lt;/strong&gt;&lt;br&gt;
  Claude Desktop App, Cursor, Windsurf, Cherry Studio 等 AI 编辑器或应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;• &lt;strong&gt;服务器:&lt;/strong&gt;&lt;br&gt;
  Anthropic 官方和社区提供了针对 Google Drive, Slack, GitHub, Git, Postgres, Puppeteer, Milvus (向量数据库), Firecrawl (网页抓取) 等的开源 MCP 服务器实现。开发者也可以根据 MCP 规范自定义服务器。目前，为安全起见，MCP 服务器通常在本地运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/f8733b1bec1615f754bdfb7995db2a1f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
