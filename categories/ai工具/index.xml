<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>AI工具 on AI</title>
        <link>https://ai.programnotes.cn/categories/ai%E5%B7%A5%E5%85%B7/</link>
        <description>Recent content in AI工具 on AI</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Wed, 23 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ai.programnotes.cn/categories/ai%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>国人GitHub项目解读神器，用来啃开源AI也太香了～</title>
        <link>https://ai.programnotes.cn/p/%E5%9B%BD%E4%BA%BAgithub%E9%A1%B9%E7%9B%AE%E8%A7%A3%E8%AF%BB%E7%A5%9E%E5%99%A8%E7%94%A8%E6%9D%A5%E5%95%83%E5%BC%80%E6%BA%90ai%E4%B9%9F%E5%A4%AA%E9%A6%99%E4%BA%86/</link>
        <pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ai.programnotes.cn/p/%E5%9B%BD%E4%BA%BAgithub%E9%A1%B9%E7%9B%AE%E8%A7%A3%E8%AF%BB%E7%A5%9E%E5%99%A8%E7%94%A8%E6%9D%A5%E5%95%83%E5%BC%80%E6%BA%90ai%E4%B9%9F%E5%A4%AA%E9%A6%99%E4%BA%86/</guid>
        <description>&lt;p&gt;&lt;strong&gt;核心内容:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zread.ai 可以通过 GitHub 链接生成结构清晰、图文并茂的项目超级指南，包括快速入门、安装、创建工作流等，并解析用户界面和 API 文档。&lt;/li&gt;
&lt;li&gt;Zread.ai 能够快速解读开源大模型，分析其核心思想和技术实现，帮助用户深入了解前沿大模型，并将其集成到自己的应用中。&lt;/li&gt;
&lt;li&gt;Zread.ai 可以帮助梳理陌生的私有项目技术框架，提炼技术细节，生成清晰的用户手册和 API 文档，便于无痛接手屎山代码和进行项目交接。
&lt;strong&gt;源自&lt;/strong&gt; |  袋鼠帝袋鼠帝AI客栈 2025-07-23 20:39&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家好，我是袋鼠帝。&lt;/p&gt;
&lt;p&gt;自从AI爆发之后，GitHub上各种AI相关的项目层出不穷。&lt;/p&gt;
&lt;p&gt;从各种效果炸裂的大模型，到疯狂提效的AI应用，感觉脑子和手完全跟不上它们更新的速度。&lt;/p&gt;
&lt;p&gt;可能有很多朋友跟之前的我一样，每天在各大平台里刷到各种🐂🍺的开源项目，心动得不行，想着这个好，那个妙，mark起来后面学（我的话就是学了，写文章）&lt;/p&gt;
&lt;p&gt;然后&amp;hellip;就没有然后了。&lt;/p&gt;
&lt;p&gt;为啥？因为读懂一个项目的成本太高了！&lt;/p&gt;
&lt;p&gt;要么是文档写得跟天书一样，要么干脆就没文档。特别是国外那些好项目，全英文，就劝退了好些人。不是没有AI翻译，而是文档习惯、使用习惯都不一样，即便翻译了，理解起来也费劲。&lt;/p&gt;
&lt;p&gt;然后昨天，我日常逛X，发现了一个神仙站点：Zread.ai&lt;/p&gt;
&lt;p&gt;可以读取GitHub项目，生成清晰的项目结构，指南，还有社区讨论&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/21390643a62f547202fbe5a3713a8700.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;正好我用得着，就点进去试了一下&lt;/p&gt;
&lt;p&gt;还真好用，而且还是免费的&lt;/p&gt;
&lt;p&gt;Zread链接：https://zread.ai/&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/c903f9e0a2540ff6c71ca645527c8c2c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;先给大家简单介绍一下它的特点&lt;/p&gt;
&lt;p&gt;Zread是一个无需登录就能使用的网站,它可以通过结构化的代码分析、知识萃取和多维度的社区信息获取，一键生成详细、且通俗易懂的项目超级指南。&lt;/p&gt;
&lt;p&gt;帮助开发者，甚至小白快速了解优秀项目的核心知识、方法论和背后的故事。&lt;/p&gt;
&lt;p&gt;现在，它已经成了我高效了解、学习任何一个全新开源项目的必备神器。&lt;/p&gt;
&lt;p&gt;说实话，如果早几年我还在上班的时候有这玩意儿，可能会有
两种情况：&lt;/p&gt;
&lt;p&gt;要么我因为效率太高，显得同事们都在摸鱼，而被排挤；&lt;/p&gt;
&lt;p&gt;要么我能把公司那些祖传的屎山代码梳理得明明白白，反手再生成一套完美的开发文档，老板含泪给我加薪。&lt;/p&gt;
&lt;p&gt;肯定还能再多学点技术。&lt;/p&gt;
&lt;p&gt;说得再天花乱坠，也不如实际体验一下。&lt;/p&gt;
&lt;p&gt;接下来就带大家一起
康康它的效果，还有各种使用场景。&lt;/p&gt;
&lt;h2 id=&#34;开源项目超级指南&#34;&gt;开源项目超级指南
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;/ 1. 
一键生成项目超级指南&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Zread.ai最直观、最实用的功能之一，就是快速生成详细的Doc（文档）。&lt;/p&gt;
&lt;p&gt;啥意思？&lt;/p&gt;
&lt;p&gt;就是你把任何一个GitHub项目的链接丢给它，它就能直接给你生成一份结构清晰、图文并茂、甚至带社区评价的超级指南（Guide）。&lt;/p&gt;
&lt;p&gt;比如我之前多次安利的海外明星级开源项目（120K Star）：n8n,对于n8n，最近经常看我文章的朋友应该不陌生了。 还不了解的朋友，可以看看我的n8n系列文章,n8n是一个工作流效率神器，非常强大。&lt;/p&gt;
&lt;p&gt;但它的上手难度应该是工作流应用里面最高的&lt;/p&gt;
&lt;p&gt;以前我的流程是：硬着头皮啃官方英文文档 -&amp;gt; 找外网视频或者社区教程 -&amp;gt; 自己反复测试、调试。&lt;/p&gt;
&lt;p&gt;现在用Zread只需要一步：&lt;/p&gt;
&lt;p&gt;把n8n的GitHub链接(&lt;a class=&#34;link&#34; href=&#34;https://github.com/n8n-io/n8n&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/n8n-io/n8n&lt;/a&gt;)粘贴进去，按下回车键生成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/19e03421ec0cc55a334a4594413b75fb.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我用的应该是比较早，我第一次粘贴n8n链接搜索的时候，n8n还没有被索引（还未收录）&lt;/p&gt;
&lt;p&gt;那就先让它索引着&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/9e4cb7be3f2f641ebff5923f9df142f7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;去蹲个坑回来，一份全中文的、结构化的n8n项目指南就诞生了～&lt;/p&gt;
&lt;p&gt;而且下次再搜索，可以直接跳转到已经生成的指南，其他人就能直接用～&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/344d6e93aa840720e3cc1a4e3ab20567.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这个指南贼详细，我只能通过视频来展示了。&lt;/p&gt;
&lt;p&gt;从开始使用的「快速入门」、「安装」到教你创建第一个工作流&lt;/p&gt;
&lt;p&gt;甚至连用户界面都通过前端代码（.vue文件）给你解析出来了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f107f2cfbad46a35ddd512be4b220b7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;然后是深度探索，不仅总结了架构、重要节点、还整理了API文档～&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/2dc115779b470e7c520e97c3a3b52cd3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;相当的nice！&lt;/p&gt;
&lt;p&gt;它就像一个资深的架构师，把整个项目掰开了，嚼碎了，用你能听懂的语言喂给你。哈哈哈，之前一直在喂AI资料，现在反过来被AI投喂了😂这对于想快速学习和应用国外优秀开源项目的朋友来说，简直不要太香。&lt;/p&gt;
&lt;p&gt;除此之外，我还索引了dify、fastgpt这两个开源项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/72f929f4c6475c034917c0d1e27eda2e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/5f8cd99c493d7091c5ecef18d67c9be7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;PS：对于已经索引好的开源项目，可以不用复制GitHub链接，而是直接搜索其名称。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/ 2. 快速
解读开源大模型&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;除了可以一键解读开源的AI相关应用，还可以解析AI本I的开源大模型。今年大模型研发、训练跟不要钱似的，各家厂商真先恐后的库库开源自家大模型。&lt;/p&gt;
&lt;p&gt;从DeepSeek开始，明显感觉到模型开源的频率越来越高了。&lt;/p&gt;
&lt;p&gt;说实话，上次我写那篇GLM-4.1V-Thinking的文章，做技术解读的时候，在GitHub、论文里面研究了半天（当然也用了AI帮我分析）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/68d0270de9e166510e9d2ee465ea7306.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;但是都没有Zread分析、总结的详细、全面，关键它快，而且节省太多时间了。&lt;/p&gt;
&lt;p&gt;它能迅速告诉你这个视觉语言模型的核心思想、技术实现。&lt;/p&gt;
&lt;p&gt;让你在喝杯咖啡的时间里，就能对一个前沿大模型有个深入的了解。&lt;/p&gt;
&lt;p&gt;无论是做技术调研，还是想把这些模型集成到自己的应用里，效率都直接拉满。&lt;/p&gt;
&lt;p&gt;下次再写开源类的文章，我准备文末放一个Zread生成的项目指南，供大家进一步理解和全面学习。&lt;/p&gt;
&lt;p&gt;当然，除了解读开源代码，Zread还有很多别的实用场景。&lt;/p&gt;
&lt;p&gt;比如下面这个～&lt;/p&gt;
&lt;h2 id=&#34;无痛接手屎山代码&#34;&gt;无痛接手屎山代码
&lt;/h2&gt;&lt;p&gt;每个程序员的职业生涯里，大概都有一段关于屎山代码的血泪史。我也不例外🥲&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/9b1d81f7758322742d92692c52a541c1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我还记得刚工作那会儿，接手组里开发的项目，几十万行代码，交接只有一句话：&amp;ldquo;代码都在公司仓库了，有问题找我&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;理解业务代码全靠感觉+Debug，后面一个看似简单的Bug，我硬是追了两天，在几十个文件之间反复横跳，&lt;/p&gt;
&lt;p&gt;那一个月，我做梦都在看代码，而且在半睡半醒之间貌似找到了解决办法（你们会做梦找方案吗😂），但是tmd，醒了之后有印象，但是细节却怎么也想不起来。&lt;/p&gt;
&lt;p&gt;一个很简单的原因，就是这个项目不是你写的，你对它完全陌生。就跟AI没有项目的上下文，或者只有部分上下文，不可能写好项目是一个道理。如果当时有Zread这类工具，我可能1天内就能摸清整个项目的细节，无痛接手。后续遇到bug也不至于搞得这么焦头烂额。因为Zread可以帮你快速梳理一个陌生的私有项目技术框架，提炼出技术细节。&lt;/p&gt;
&lt;p&gt;你甚至可以（在获得领导允许的前提下）把公司的私有项目喂给它，让它帮你生成一份清晰的用户手册、API文档
我用自己的GitHub私有项目，给大家实操一下。&lt;/p&gt;
&lt;p&gt;回到主页，点击「添加私人仓库」&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/16618f202c47d28e0fb3daf345424000.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;目前仅支持GitHub私有仓库&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/c472ae0b1c54784b5cf7c0300a3de88d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;它会把你私有仓库的所有项目都展示在这里（开源的不会展示）&lt;/p&gt;
&lt;p&gt;点击添加到CGX,所选择的项目是我去年基于cow二次开发的一个cow桌面版产品：个微AI助理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/f2b748f9be830c2115315ee789d6605e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到就在进行中啦～ 接下来要做的就是等待。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/df33866021f32f9992d83a21310332f6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这次不知道等了多久（因为是出去吃了个饭回来），打开一看，已经索引完毕了。&lt;/p&gt;
&lt;p&gt;这个效果我真的惊了！&lt;/p&gt;
&lt;p&gt;看完之后，我感觉它比我还懂这个项目&amp;hellip;&lt;/p&gt;
&lt;p&gt;真的非常全面且细节，完全可以当做一个用户操作使用手册，以及开发人员交接手册了！&lt;/p&gt;
&lt;p&gt;「开始入门」那块，可以带你从宏观层面了解整个项目（这一点是非常重要的），先了解整个项目的全貌，才能更容易理解后面的细节。&lt;/p&gt;
&lt;p&gt;而「深入了解」可以带你从微观视角出发，理解功能细节，使用方式等等，我只能说🐂🍺&lt;/p&gt;
&lt;p&gt;想想去年年底，我还专门花了一天的时间😭，就为了整理这个产品的说明书，还有用户操作手册。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/271bd7f14dcdddf6071b981780445b24.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;要是那时候能用上这玩意儿，可能半小时内就搞定了🤦‍♂️&lt;/p&gt;
&lt;p&gt;另外，对于还在上班的朋友来说，如果领导让你写个交接文档，感觉至少也得花一整天，至少！&lt;/p&gt;
&lt;p&gt;这事情我是深有感触&lt;/p&gt;
&lt;p&gt;我还记得23年底提交了离职申请（裸辞）后，领导让我整理交接文档。&lt;/p&gt;
&lt;p&gt;下图是我离职前的工位，，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/149f0391389f32c29218cbe6c55e9c27.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;当时还有App的线上营业厅的新版本要负责跟进，每天非常忙，那个交接文档我断断续续足足整理了5天左右才搞定。&lt;/p&gt;
&lt;p&gt;说个题外话：离职的话正常是提前30天提出嘛，但是如果未满30天，离职流程就已经走完了，就没必要继续工作了（负责交接就行），因为在公司层面你已经是外人了。我当时就是忙活了半天，到倒数第二天突然提前发年终奖了，却没我的份。&lt;/p&gt;
&lt;p&gt;用Zread一键生成的项目文档，还可以存入公司知识库。&lt;/p&gt;
&lt;p&gt;不仅能救赎你自己，还能造福后面的同事，功德无量 哈哈哈。&lt;/p&gt;
&lt;p&gt;尤其对于创业公司和中小团队来说，这个功能非常nice。&lt;/p&gt;
&lt;p&gt;它真滴能极大促进内部研发、迭代效率，把那些宝贵的、只存在于老员工脑子里的开发经验，沉淀下来～&lt;/p&gt;
&lt;p&gt;补充一点，如果懒得读，还可以直接问：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/e362c154df078b42a93e942ea6e688c5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这个回答不是基于生成的文档，而是
基于整个代码。&lt;/p&gt;
&lt;p&gt;会先思考，然后找到关键代码文件作为上下文来回答。&lt;/p&gt;
&lt;h2 id=&#34;github-trending和背后的故事&#34;&gt;GitHub Trending和背后的故事
&lt;/h2&gt;&lt;p&gt;Zread不仅能查看GitHub热门仓库&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/c667030a0c6d4529e3dc80e307365ac1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;还可以了解当下热门项目背后的故事～这绝对是Zread的杀手级功能，也是我个人最爱的点。&lt;/p&gt;
&lt;p&gt;我们平时是怎么看GitHub Trending的？可能大多数朋友是看看榜单，点进去看看Star数，扫一眼README，感觉卧槽，NB，然后clone下来跑一跑。&lt;/p&gt;
&lt;p&gt;我有时候也是这样的，但是，你有没有想过：&lt;/p&gt;
&lt;p&gt;这个开源项目为什么能火？它解决了什么痛点？它背后的作者是谁？有什么样的背景故事？社区里的真实用户评价怎么样？大家都在讨论它的什么？&lt;/p&gt;
&lt;p&gt;它最近做了什么NB的更新，才让它冲上榜单？&lt;/p&gt;
&lt;p&gt;这些深层次的信息，才是决定一个项目成功的关键，我们也可以从中洞察趋势、复制爆款～&lt;/p&gt;
&lt;p&gt;以前，要了解这些，你得去翻作者的X、博客，去Reddit、Hacker News等社区里大海捞针地找相关讨论。&lt;/p&gt;
&lt;p&gt;费时费力，还不一定找得全。&lt;/p&gt;
&lt;p&gt;接下来，我在主页点击「探索本周的热门仓库」进入到本周最火项目页面（如下）&lt;/p&gt;
&lt;p&gt;其实这个页面除了展示本周的，还展示了最近一个月内，每周最火的开源项目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/35449d42a947959360d0c4cfe48a0480.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;就看本周最最火的开源项目：
googleapis/genai-toolbox 点进去&lt;/p&gt;
&lt;p&gt;可以看到，它能够扒到大家近期对该项目讨论度最高的一些点，还有大家的真实反馈，和评论，以及项目团队相关信息。可以说比较全面了～&lt;/p&gt;
&lt;p&gt;而这些信息，可能大部分人都不会关注到，一个是想不到，二一个是不好收集&lt;/p&gt;
&lt;p&gt;另外，我之前光去研究n8n怎么使用了，还真没仔细了解n8n背后的故事&lt;/p&gt;
&lt;p&gt;正好借助Zread，我们一起来看看&lt;/p&gt;
&lt;p&gt;你还可以在这份指南里，跟社区互动起来。&lt;/p&gt;
&lt;p&gt;看到有意思的地方，可以直接划线、写想法、分享，看看别人都在关注什么&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/749209a3266f37a3ca47d5dd3d55b95c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;划线之后，别人能看到。但是目前写想法只能自己看到（后续应该会开放到所有人可见）&lt;/p&gt;
&lt;h2 id=&#34;一些补充&#34;&gt;一些补充
&lt;/h2&gt;&lt;p&gt;我还挺好奇，把那种总结性的开源项目，比如：&lt;/p&gt;
&lt;p&gt;MCP-Servers汇总：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/punkpeye/awesome-mcp-servers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/punkpeye/awesome-mcp-servers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;N8N模板汇总：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/enescingoz/awesome-n8n-templates&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/enescingoz/awesome-n8n-templates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;n8n模板这个还没有索引，创建一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/0f8407c96f5ebe3e83014bab87d22b9e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;最后得到的指南也是非常棒，可以用来学习n8n和MCP&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/9e2b5b0f4a0b2d55fc43de0bd2d6ee0d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3ed74fa8f57da6eb20999e60e5aab205.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;另外，当你浏览GitHub，看到任何一个感兴趣的仓库，想立刻用Zread解读它，可以直接在浏览器的地址栏里，把github.com改成zread.ai，然后按下回车。&lt;/p&gt;
&lt;p&gt;直接就能跳转到深度解读页面～&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/n8n-io/n8n&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/n8n-io/n8n&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;改成&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zread.ai/n8n-io/n8n&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zread.ai/n8n-io/n8n&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而且，我估计以后很多开源项目会用这个网站一键生成官方文档，或者作为过渡，因为支持中英文，而且太省心了，关键是不用登录就能看。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后
&lt;/h2&gt;&lt;p&gt;从AI写代码，到AI帮你读懂代码，我们能真切地感受到，AI正在渗透到软件开发的每一个环节。&lt;/p&gt;
&lt;p&gt;我觉得Zread做的，不仅仅是一个代码翻译或总结工具。&lt;/p&gt;
&lt;p&gt;它想解决的是知识传递与再创造的问题。把读懂优秀代码这件事，升级为复制优秀、创造更好的项目。哈哈，也好适合用来做开源项目的二次开发。&lt;/p&gt;
&lt;p&gt;这些索引好的开源项目，既能帮助我们这些当下的开发者，从浩如烟海的开源项目中高效汲取知识，快速成长。&lt;/p&gt;
&lt;p&gt;未来也可以成为Coding Agent（编程智能体）最好的参考材料（Context）。比如封装成MCP-Server接入Agent。&lt;/p&gt;
&lt;p&gt;技术的进步，最终都是为了解放生产力和创造力。&lt;/p&gt;
&lt;p&gt;Zread这样的工具，正在把我从大量重复、繁琐的读代码、理逻辑、写文档的工作中解放出来，让我能把更多精力，投入到真正的创新和创造中去。&lt;/p&gt;
&lt;p&gt;真心建议每个跟代码打交道的朋友都去试试。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>请收下，看了就会的9个AI办公技巧</title>
        <link>https://ai.programnotes.cn/p/%E8%AF%B7%E6%94%B6%E4%B8%8B%E7%9C%8B%E4%BA%86%E5%B0%B1%E4%BC%9A%E7%9A%849%E4%B8%AAai%E5%8A%9E%E5%85%AC%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ai.programnotes.cn/p/%E8%AF%B7%E6%94%B6%E4%B8%8B%E7%9C%8B%E4%BA%86%E5%B0%B1%E4%BC%9A%E7%9A%849%E4%B8%AAai%E5%8A%9E%E5%85%AC%E6%8A%80%E5%B7%A7/</guid>
        <description>&lt;img src="https://ai.programnotes.cn/img/ai/c3bba56a1f47efaccc35609886b7c94c.png" alt="Featured image of post 请收下，看了就会的9个AI办公技巧" /&gt;&lt;p&gt;&lt;strong&gt;核心内容:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;半小时做一套PPT，通过Markdown框架和AI工具快速生成&lt;/li&gt;
&lt;li&gt;5分钟生成Excel表格，AI帮助整理会议内容并自动生成可下载表格&lt;/li&gt;
&lt;li&gt;快速绘制流程图，使用mermaid格式通过AI生成并导入绘图软件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;源自&lt;/strong&gt; |  刘润主创团  刘润   2025-05-27 08:37&lt;/p&gt;
&lt;p&gt;你是不是常觉得，每天被各种琐事缠身？明明想做点“有价值”的工作，花时间捋捋思路，可大部分时间，都耗在了那些重复、机械的任务上。&lt;/p&gt;
&lt;p&gt;比如，没完没了的会议纪要，急着要的Excel，改了又改的PPT、流程图……&lt;strong&gt;这些工作，说难不难，但就是特别“吃”时间，还容易出错。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;都说AI时代来了，DeepSeek也确实厉害。但左试右试，好像也只能生成文字。我想让它干的，是那些耗时间的“杂活”，它能干吗？&lt;/p&gt;
&lt;p&gt;能干。&lt;/p&gt;
&lt;p&gt;前段时间，刘润读书会，邀请到了清华大学经管学院博士后、人工智能研究专家王吉斌及其团队小伙伴。他用了一晚上的时间，和团队的几位老师轮流上阵，现场演示了利用AI，提高办公效率的方法，特别实用。&lt;/p&gt;
&lt;p&gt;所以，今天我也特地从直播和书中，精挑细选了&lt;strong&gt;9个特别有用的&lt;strong&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;/strong&gt;办公技巧。每一个，都力求让你一看就明白，一用就上手。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;准备好了吗？我们开始。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/a1a4215a82800bfa8e8e13883d60ea9d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;半小时做一套PPT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你是不是，也经常为做PPT而头疼？&lt;/p&gt;
&lt;p&gt;下周就要给客户提案了，可几十页的PPT，还只有一个标题。老板让你把上周的项目做个总结，脑子里有千言万语，却不知道第一页该放什么。&lt;/p&gt;
&lt;p&gt;内容框架想完，已经去掉半条命了。接下来，还有更磨人的：码字、找配图、调整字体、颜色……在模板库里挑花了眼，在素材网站跑断了腿。一套PPT做下来，一两天就没了。&lt;/p&gt;
&lt;p&gt;怎么办？别慌。我们这就去请AI来帮忙。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先，请DeepSeek帮助我们，梳理思路，生成大纲。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我随便举个例子。&lt;/p&gt;
&lt;p&gt;比如，这样说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在，我要做一份关于低空经济产业趋势的PPT内容分享，面向的人群，是想要转行从事这个行业的23-35岁人群，要求逻辑清晰，构架完整，以Markdown形式输出。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;划重点，Markdown格式。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这种格式，特别结构化，对你来说，它易写易改；对AI来说，它也更容易理解，为后续生成PPT打下基础。就像这样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/526d4a06c6e1a6785d0c54114d87079c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;挺好。接着，我们&lt;br&gt;
打开Kimi，展开导航，点击Kimi+，找到PPT助手。把Markdown格式的内容，发给它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/ca0c37ee7691b6dfee607f33f08ae7cb.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;不错。只见Kimi同学，很快就理解了markdown格式的框架。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你只要点击“一键生成PPT”，选择想要的模版，就能直接得到一套做好的PPT。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很快，一分钟都没用。&lt;/p&gt;
&lt;p&gt;说实话，这种从无到有，瞬间拥有一套完整PPT的感觉，挺爽。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/e21f3ec1889cee4d9e18bb62489f643f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;是不是还不错？&lt;/p&gt;
&lt;p&gt;但你可能会说，在动手做PPT之前，我经常捋不清脑子里的想法。&lt;/p&gt;
&lt;p&gt;怎么办？&lt;strong&gt;这时候，你可以试着，先做一个思维导图。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;理清思路做思维导图&#34;&gt;理清思路，做思维导图
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;很多时候，我们都需要理清思绪。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如，脑子里突然冒出很多新点子。或者，刚学习完一门新课程、读完一本厚厚的书。概念很多，但一团乱麻。&lt;/p&gt;
&lt;p&gt;怎么办？做张思维导图吧。可是信息点太多太杂，从“无序”的想法到“有序”的导图，还是很费脑力。&lt;/p&gt;
&lt;p&gt;那，怎么偷偷懒？我们还是请DeepSeek来帮忙。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;帮我写一个思维导图，主题就是我发你的这篇文章。要求结构清晰、逻辑连贯，确保不丢失任何细节，采用Markdown模式写到代码块中。&lt;br&gt;
以下为文章正文：请笑纳：我这28年的写作心法，全部都在这里了&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这篇文章，很长很长。在公号已经发布的所有文章之中，名列前茅。一下子可能看不完。但没关系，你可以看思维导图。&lt;/p&gt;
&lt;p&gt;拿到DeepSeek生成的总结之后，我们打开Xmind，在文件-导入选项卡里，找到Markdown格式，把刚才的总结，粘贴进去。&lt;/p&gt;
&lt;p&gt;一个思维导图，就这么生成了。文章内容一目了然。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/9d32d4aabf4b4cbf6da219a56ae8f971.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AI做思维导图，不是替你思考，而是帮你更好地思考。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;思路理清了，无论是做方案还是学习新知识，效率都大大提升。&lt;/p&gt;
&lt;p&gt;但说到“整理”，办公场景里，还有一个老大难问题，那就是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;会议纪要。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;&#34;&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;10分钟做好会议纪要&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作为“会议记录员”，你奋笔疾书。可手速跟不上语速，会议内容没怎么听进去。整理出来的纪要，自己看着都费劲。费时费力，还不讨好。&lt;/p&gt;
&lt;p&gt;怎么办？没事，我们继续用AI。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先，我们找到一个语音转文字的工具。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以是飞书自带的飞书妙记，也可以是Get笔记，讯飞听见……都好。找你用得顺手的。就飞书妙记吧。点击右下角那个小话筒，开始录音，它就能把语音，转录成文字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/790567fe91e0835d9f5162b70ce83875.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;拿到录音的文字稿之后，你就可以打开老伙计DeepSeek，告诉它：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一份会议的录音。我希望你整理一份会议纪要出来。分条分点列出会议议题，并附进展情况，解决措施，负责人。&lt;br&gt;
以下是录音文字稿：xxxx&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;接着，它马上就能给你一份质量不错的会议纪要。我截取了其中一个议题，看看效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/817b23e43590f4dbb801e920edb53c91.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;是不是还不错？现在，你只需要花10分钟，做确认和微调就可以了。&lt;/p&gt;
&lt;p&gt;但会议中，除了形成决议，我们还会讨论到需要追踪的数据、任务。这些信息，如果能直接变成&lt;strong&gt;表格&lt;/strong&gt;&lt;br&gt;
，就更方便管理了。&lt;/p&gt;
&lt;p&gt;没问题。AI照样手到擒来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;5分钟生成excel表格&#34;&gt;5分钟生成Excel表格
&lt;/h3&gt;&lt;p&gt;我想，你经常遇见这样的情况。&lt;/p&gt;
&lt;p&gt;工作中，突然有做表格的要求，还得打印出来。这听起来没什么，但你打开Excel，输入信息，合并单元格……一顿操作，半小时都过去了。&lt;/p&gt;
&lt;p&gt;更可怕的，是老板突然甩给你一段材料，让你把关键信息整理成一个表格，下班前给他。你一看，信息点零零散散，分布在各个段落。手动提取、复制、粘贴……想想都觉得手腕发酸，眼睛发胀。&lt;/p&gt;
&lt;p&gt;怎么办？这活AI可帮不了我吧。你看DeepSeek，不是只能生成文字吗？&lt;/p&gt;
&lt;p&gt;不一定哦。举个例子，做个请假表格：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;帮我做一个请假的表格，要有姓名，部门，请假时间，请假类别，请假理由，主管部门意见，总经理意见，并留出签名的地方，最终以HTML的格式输出。页面要有能直接下载Excel文档的功能，并且能直接下载Excel文件。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;它会输出什么呢？请看图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/6098f2d3493a0d57936d6e0bac8c6d0e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;它会给你一个HTML页面代码。你只需要点击一下“运行”，就能得到一个可以下载的Excel表格。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f771f111253f788d4534a4af6580118.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;是不是有点东西？&lt;/p&gt;
&lt;p&gt;这意味着，过去你可能需要半小时甚至更长时间手动敲打、调整的制表工作，可能只需要几分钟的“沟通”，再经过微调，就能搞定。&lt;/p&gt;
&lt;p&gt;比如，“帮我把这段素材里的关键信息，制作成表格”，并且优雅地加上一句“最终以HTML的格式输出，页面要有能直接下载Excel文档的功能。”&lt;/p&gt;
&lt;p&gt;AI，就能帮你把繁琐的执行过程给“承包”了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;&#34;&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;批量修改Excel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;提到Excel，还有一个场景，特别让人头疼：&lt;strong&gt;批量做表格。它们大体相同，但又有微小区别。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如，挨个评价部门20多位同事的绩效。&lt;/p&gt;
&lt;p&gt;虽然有模板，但每个人的名字都不一样。正常情况下，你要手动在Excel里一个个复制，再更改名字，特别繁琐。&lt;/p&gt;
&lt;p&gt;怎么办？你可以这样说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想做20个人的绩效评价表。其中，第一张表有数据，表格名叫做“绩效评价”。姓名为张三，在B1单元格。我想依次再生成19个表格，然后姓名替换为如下，帮我生成宏代码：林一、张二、王三、李四、吴五、陈六、赵七、刘八、郑九、杨十、李十一、王十二、张十三、陈十四、刘十五、赵十六、林十七、吴十八、郑十九。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/e1d6f4d040159775c33d6c1e6a734dfc.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看。很快，DeepSeek就能写出对应的代码指令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3a0b9c567e2cd8d41701765d21ad45c0.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;接着，就是在Excel里，把代码粘贴到VB编辑器里。插入-格式-粘贴代码。这里注意，如果VB编辑器用不了的话，可能需要单独设置权限，启用宏功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/f262da86fe4a523af4c0175678d23efe.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;不需要保存。插入DeepSeek写好的代码，关掉。回到表格页面，点击“运行宏”，19个表格，一下子就做好了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/93d4f076ccaef8ef303c7799919018de.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;&#34;&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;快速绘制流程图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;工作中，你可能需要，把一些复杂的流程，用图表呈现出来。比如，给新员工培训用的手册。比如，讨论新方案的可行路径。&lt;/p&gt;
&lt;p&gt;这时候，你就得一点点拖拽、对齐、输入文字。小了看不清，大了排不下，线条拐弯抹角，调整起来能把人逼疯。好不容易弄好了，领导一句“不好看”，又打回来重做。&lt;/p&gt;
&lt;p&gt;好烦。怎么办？&lt;strong&gt;没事，快去请AI&lt;strong&gt;&lt;strong&gt;大仙&lt;/strong&gt;&lt;/strong&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按照惯例，我们先问DeepSeek。比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;帮我设计一个半导体超纯管件的生产业务流程图。用mermaid格式输出。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;划重点，mermaid。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;借助mermaid这种用代码描述图表的工具，DeepSeek就能直接把图表“写”出来。是不是有点意思？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/6a7ebe8c254a4676ff206ffdf91736a3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看，一分钟。勤勤恳恳的DeepSeek，就完成了流程图设计。&lt;/p&gt;
&lt;p&gt;把它写好的mermaid格式的流程图代码，复制到绘图软件中，我这里用的是Draw.io。一个初版流程图，就一下子画好了。看图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/ebcef8adfb5d61dbbfbf024c874b817f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;是不是还有点意思？在Draw.io里，你还能继续对细节进行微调。&lt;/p&gt;
&lt;p&gt;以后，你可能再也不用在绘图工具里，跟那些小方框、小菱形、小箭头较劲了，而是把更多的精力，放在思考流程本身上。&lt;/p&gt;
&lt;p&gt;流程理顺了，工作自然就更有条理。但很多时候，很多细项内容，流程图还是有点“干”，不容易理解。有没有更好的展示方式？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;小白也能做演示动画&#34;&gt;小白也能做演示动画
&lt;/h3&gt;&lt;p&gt;我猜，你大概有类似的苦恼。&lt;/p&gt;
&lt;p&gt;想给团队解释一个复杂的产品流程，但文字和静态图片，太干。如果能用一段有趣简洁的动画展示，效果肯定好上百倍。俗话说一图顶万字，如果是动画，岂不是顶更多万字？&lt;/p&gt;
&lt;p&gt;但是……一想到制作动画，你头就大了。我又不是专业动画师，那些复杂的软件，怎么用？就算是一些简单的工具，也得自己一点点拖素材，调时间轴，没个半天根本搞不定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;很多好想法，就因为表达门槛太高，最终只能****停留在脑海里。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;太可惜了。没事，我们用AI弥补这个遗憾。&lt;/p&gt;
&lt;p&gt;比如，我可以这么说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;公司向新员工或合作伙伴介绍其供应链运作模式；或者向消费者展示产品的“透明化”生产运输过程。制作一个动画，要求以HTML呈现。大概是：卡车从工厂驶出，行驶到仓库前，在仓库卸货。另一辆卡车从仓库驶出，到达超市。货物出现在超市，顾客很开心。图标卡通化。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;DeepSeek很快就编好了代码。点击运行。一个简单的动画就出现了。把它保存成HTML文件，就可以展示动画了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/c3bba56a1f47efaccc35609886b7c94c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;不错。虽然还有点简陋。但至少多了一个办法。并且，以后效果肯定会越来越好的。好想法，不必担心表达不出来了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;&#34;&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;5分钟完成数据可视化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个午后，你收到一堆Excel表格，里面密密麻麻全是数字。&lt;/p&gt;
&lt;p&gt;老板让你分析一下数据，看看有什么趋势和问题，做几个图表出来汇报一下。你盯着那些单元格，一阵头晕。&lt;/p&gt;
&lt;p&gt;因为你知道：&lt;strong&gt;今天下午，就又交代在这了。搞不好，还得熬夜。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用什么图表，才能展现这堆数据的价值？用饼图看占比，还是用散点图看相关性？图选错了，表达不清晰，还误导决策。接着，你又开始跟各种选项较劲：哪个系列放X轴？图例怎么调？颜色怎么搭配？&lt;/p&gt;
&lt;p&gt;别慌。因为我们的DeepSeek，还是一如既往的神勇。&lt;/p&gt;
&lt;p&gt;你可以这么说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;帮我根据上传的数据，生成六种可视化分析图表，要求以html格式输出，可执行。以下是数据：xxx&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;短暂思考之后，它马上给出了可运行的HTML代码。点击运行之后，你就立刻可以获得这些图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/46319e1f26e8fd6f2584de2e611b9086.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/d645ed0992be0a6ed362aeab404af311.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/a8ee825cfc71e5331e81e0548d1b6447.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;（图片可左右滑动）&lt;/p&gt;
&lt;p&gt;效果还行，对吧。不满意的话，还可以微调。&lt;/p&gt;
&lt;p&gt;或许，你还想要更多。&lt;/p&gt;
&lt;p&gt;比如，在一些专业的分析报告或者发布会上，出现的炫酷图表。像是，“动态折线图”。数据，能随时间轴自己“动”起来。又或者，“南丁格尔玫瑰图”。像花瓣一样绽放、优雅地对比各项数据……&lt;/p&gt;
&lt;p&gt;太牛了。如果我也能用上，今年评优肯定多一分。可些高级图表，往往意味着更复杂的参数设置，&lt;br&gt;
甚至还需要编程，特别费劲。怎么办？&lt;/p&gt;
&lt;p&gt;好说。DeepSeek一个人不行，咱就再上搭子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3f46c4d81f743f36bb7cea7b4336dacb.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;不编程也能画复杂图表&#34;&gt;不编程，也能画复杂图表
&lt;/h3&gt;&lt;p&gt;啥搭子？ECharts。&lt;/p&gt;
&lt;p&gt;直接百度搜索，你就能看见它。这是一个开源的图表库。你点击“所有示例”，就能找到很多炫酷的图表。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/ea8815b1956048ac62e106f3314f3d01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;（图片来自：Apache Echarts）&lt;/p&gt;
&lt;p&gt;选择你喜欢的图表，在界面左侧，你就能看到它的代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/3a78eabb031ff8d9666f1ed18abe6c35.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;（图片来自：Apache Echarts）&lt;/p&gt;
&lt;p&gt;好了。现在关键的来了。&lt;/p&gt;
&lt;p&gt;你要先把这个图表的代码，复制下来。然后，放进DeepSeek，让它按照我们的理解画图。&lt;/p&gt;
&lt;p&gt;你可以这么说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;阅读以下代码。把其中的数据，替换成我给你的，3个品牌智能手机的23年下半年销量数据。并且生成可执行的渐变堆叠面积图HTML代码。&lt;br&gt;
代码：xxx&lt;br&gt;
数据：xxx&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;有时候，代码、数据比较多，可以直接上传文档。把代码保存为txt文档、数据存成excel文档。上传后，告诉DeepSeek：理解代码，然后替换数据为上传表格数据。&lt;/p&gt;
&lt;p&gt;勤勤恳恳2分钟之后，DeepSeek返回了结果。点击运行，图表就出现了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/bd9ab0172bb6120b94c534aaf8a8bef0.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;哇。真好看。&lt;/p&gt;
&lt;p&gt;没想到，那些技术大神炫技的图表，有朝一日我也能做出来。&lt;/p&gt;
&lt;p&gt;类似的技巧，还有很多很多。今天的分享，只是抛砖引玉，挂一漏万。&lt;/p&gt;
&lt;p&gt;不过，看完这几个方法之后，不知道你发没发现这样一件事。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;虽然DeepSeek的核心，依然在“文本”，但这不意味着，它只能帮你做文本。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很多看似超越了“文字”范畴的技能，比如直接生成Excel、一键绘制流程图，它也能实现。&lt;/p&gt;
&lt;p&gt;因为，它掌握了一种底层的语言：&lt;strong&gt;代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过把自然语言转化为代码  指令  ，  AI  就能驱动其他软件，完成任务。这样，我们就能从那些重复机械、消磨心智的工作中，解放出来，真正腾出时间和精力，去思考，去创造。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AI+代码，真的可以让我们少干杂活了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在这个充满不确定性的时代，唯一的不变是变化。但是，无论技术如何革新，有一个核心，始终不变：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工具的价值，不在于本身，而在于使用它的人，如何用它创造价值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不知道今天的分享，  对你有没有启发？欢迎你，也在评论区分享，自己最常用的AI办公技巧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/4a598b357bef8a99b53b5be61937a048.other&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>OpenAI Codex CLI：终端中的轻量级编码助手</title>
        <link>https://ai.programnotes.cn/p/openai-codex-cli%E7%BB%88%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8B/</link>
        <pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ai.programnotes.cn/p/openai-codex-cli%E7%BB%88%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8B/</guid>
        <description>&lt;img src="https://ai.programnotes.cn/img/ai/codex.gif" alt="Featured image of post OpenAI Codex CLI：终端中的轻量级编码助手" /&gt;&lt;p&gt;核心内容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Codex CLI 是一个在终端中运行的编码助手，可以理解和执行您的存储库。&lt;/li&gt;
&lt;li&gt;它支持多种模型，包括 OpenAI、Azure、OpenRouter 等，并且可以通过配置文件进行灵活配置。&lt;/li&gt;
&lt;li&gt;Codex CLI 提供了不同的权限模式，可以在安全可靠的环境中自动运行，并具有详细的日志记录和调试功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/openai/codex&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenAI Codex CLI&lt;/a&gt;是轻量级的编码助手，可在您的终端中运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ai.programnotes.cn/img/ai/codex.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Codex 演示 GIF，使用：codex “explain this codebase to me”&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;快速入门&#34;&gt;快速入门
&lt;/h2&gt;&lt;p&gt;全局安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g @openai/codex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来，将 OpenAI API 密钥设置为环境变量：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;OPENAI_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;your-api-key-here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 此命令仅为当前终端会话设置密钥。您可以将 &lt;code&gt;export&lt;/code&gt; 行添加到 shell 的配置文件（例如 &lt;code&gt;~/.zshrc&lt;/code&gt;），但我们建议为会话设置。&lt;strong&gt;提示：&lt;/strong&gt; 您还可以将 API 密钥放入项目根目录下的 &lt;code&gt;.env&lt;/code&gt; 文件中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-env&#34; data-lang=&#34;env&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OPENAI_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;your-api-key-here
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;CLI 将自动从 &lt;code&gt;.env&lt;/code&gt; 加载变量（通过 &lt;code&gt;dotenv/config&lt;/code&gt;）。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;使用其他模型&#34;&gt;使用其他模型
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Codex 还允许您使用支持 OpenAI Chat Completions API 的其他提供商。您可以在配置文件中设置提供商，或使用 &lt;code&gt;--provider&lt;/code&gt; 标志。&lt;code&gt;--provider&lt;/code&gt; 的可能选项包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;openai（默认）&lt;/li&gt;
&lt;li&gt;openrouter&lt;/li&gt;
&lt;li&gt;azure&lt;/li&gt;
&lt;li&gt;gemini&lt;/li&gt;
&lt;li&gt;ollama&lt;/li&gt;
&lt;li&gt;mistral&lt;/li&gt;
&lt;li&gt;deepseek&lt;/li&gt;
&lt;li&gt;xai&lt;/li&gt;
&lt;li&gt;groq&lt;/li&gt;
&lt;li&gt;arceeai&lt;/li&gt;
&lt;li&gt;任何其他与 OpenAI API 兼容的提供商&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您使用除 OpenAI 之外的提供商，您需要在配置文件或环境变量中设置提供商的 API 密钥，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &amp;lt;provider&amp;gt;_API_KEY&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;your-api-key-here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果您使用上面未列出的提供商，您还必须设置提供商的基本 URL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &amp;lt;provider&amp;gt;_BASE_URL&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://your-provider-api-base-url&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;以交互方式运行&#34;&gt;以交互方式运行
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;codex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者，使用提示作为输入运行（可以选择以 &lt;code&gt;Full Auto&lt;/code&gt; 模式运行）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;codex &lt;span class=&#34;s2&#34;&gt;&amp;#34;explain this codebase to me&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;codex --approval-mode full-auto &lt;span class=&#34;s2&#34;&gt;&amp;#34;create the fanciest todo-list app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;就是这样 - Codex 将搭建一个文件，在沙盒中运行它，安装任何缺少的依赖项，并向您展示实时结果。批准更改后，它们将被提交到您的工作目录。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;为什么选择-codex&#34;&gt;为什么选择 Codex？
&lt;/h2&gt;&lt;p&gt;Codex CLI 专为已经&lt;strong&gt;生活在终端中&lt;/strong&gt;的开发人员而构建，他们希望获得 ChatGPT 级别的推理能力&lt;strong&gt;以及&lt;/strong&gt;实际运行代码、操作文件和迭代的能力 - 所有这些都在版本控制之下。简而言之，它是一种_聊天驱动的开发_，可以理解和执行您的存储库。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;零设置&lt;/strong&gt; - 提供您的 OpenAI API 密钥即可使用！&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完全自动批准，同时安全可靠&lt;/strong&gt;，通过禁用网络和目录沙盒运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多模式&lt;/strong&gt; - 传入屏幕截图或图表以实现功能 ✨&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并且它是&lt;strong&gt;完全开源的&lt;/strong&gt;，因此您可以查看并贡献其开发方式！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安全模型--权限&#34;&gt;安全模型 &amp;amp; 权限
&lt;/h2&gt;&lt;p&gt;Codex 允许您通过 &lt;code&gt;--approval-mode&lt;/code&gt; 标志（或交互式引导提示）来决定代理接收的_自主权_和自动批准策略：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模式&lt;/th&gt;
          &lt;th&gt;代理在不询问的情况下可以做什么&lt;/th&gt;
          &lt;th&gt;仍然需要批准&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Suggest&lt;/strong&gt; &lt;br&gt;(默认)&lt;/td&gt;
          &lt;td&gt;&lt;li&gt;读取存储库中的任何文件&lt;/td&gt;
          &lt;td&gt;&lt;li&gt;&lt;strong&gt;所有&lt;/strong&gt; 文件写入/补丁&lt;li&gt; &lt;strong&gt;任何&lt;/strong&gt; 任意 shell 命令（除了读取文件）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Auto Edit&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;li&gt;读取 &lt;strong&gt;并&lt;/strong&gt; 将补丁写入文件&lt;/td&gt;
          &lt;td&gt;&lt;li&gt;&lt;strong&gt;所有&lt;/strong&gt; shell 命令&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Full Auto&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;li&gt;读取/写入文件 &lt;li&gt; 执行 shell 命令（禁用网络，写入限制为您的工作目录）&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在 &lt;strong&gt;Full Auto&lt;/strong&gt; 中，每个命令都以&lt;strong&gt;禁用网络&lt;/strong&gt;运行，并限制在当前工作目录（加上临时文件）中，以实现深度防御。如果您在目录_未_被 Git 跟踪的情况下以 &lt;strong&gt;auto-edit&lt;/strong&gt; 或 &lt;strong&gt;full-auto&lt;/strong&gt; 启动，Codex 还会显示警告/确认，因此您始终有一个安全网。&lt;/p&gt;
&lt;p&gt;即将推出：一旦我们确信有额外的保障措施，您就可以将特定的命令列入白名单以自动执行，并启用网络。&lt;/p&gt;
&lt;h3 id=&#34;平台沙盒细节&#34;&gt;平台沙盒细节
&lt;/h3&gt;&lt;p&gt;Codex 使用的强化机制取决于您的操作系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;macOS 12+&lt;/strong&gt; - 命令使用 &lt;strong&gt;Apple Seatbelt&lt;/strong&gt; (&lt;code&gt;sandbox-exec&lt;/code&gt;) 包装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;除了少量可写根目录（&lt;code&gt;$PWD&lt;/code&gt;、&lt;code&gt;$TMPDIR&lt;/code&gt;、&lt;code&gt;~/.codex&lt;/code&gt; 等）外，所有内容都放置在只读监狱中。&lt;/li&gt;
&lt;li&gt;默认情况下，出站网络被_完全阻止_ - 即使子进程尝试 &lt;code&gt;curl&lt;/code&gt; 某个地方，也会失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; - 默认情况下没有沙盒。
我们建议使用 Docker 进行沙盒处理，其中 Codex 在&lt;strong&gt;最小容器镜像&lt;/strong&gt;中启动自身，并将您的存储库以相同路径_读/写_挂载。自定义 &lt;code&gt;iptables&lt;/code&gt;/&lt;code&gt;ipset&lt;/code&gt; 防火墙脚本拒绝除 OpenAI API 之外的所有出口。这使您无需主机上的 root 即可进行确定性、可重现的运行。您可以使用 &lt;a class=&#34;link&#34; href=&#34;./codex-cli/scripts/run_in_container.sh&#34; &gt;&lt;code&gt;run_in_container.sh&lt;/code&gt;&lt;/a&gt; 脚本来设置沙盒。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;系统要求&#34;&gt;系统要求
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;要求&lt;/th&gt;
          &lt;th&gt;详细信息&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;操作系统&lt;/td&gt;
          &lt;td&gt;macOS 12+，Ubuntu 20.04+/Debian 10+，或 Windows 11 &lt;strong&gt;通过 WSL2&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Node.js&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;22 或更高版本&lt;/strong&gt;（推荐使用 LTS）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Git（可选，推荐）&lt;/td&gt;
          &lt;td&gt;2.23+，用于内置的 PR 助手&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;内存&lt;/td&gt;
          &lt;td&gt;最小 4-GB（推荐 8-GB）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;切勿运行 &lt;code&gt;sudo npm install -g&lt;/code&gt;；请改为修复 npm 权限。&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cli-参考&#34;&gt;CLI 参考
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th&gt;目的&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;交互式 REPL&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;...&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;交互式 REPL 的初始提示&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;fix lint errors&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;codex -q &amp;quot;...&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;非交互式“安静模式”&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex -q --json &amp;quot;explain utils.ts&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;codex completion &amp;lt;bash|zsh|fish&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;打印 shell 补全脚本&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex completion bash&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;主要标志：&lt;code&gt;--model/-m&lt;/code&gt;、&lt;code&gt;--approval-mode/-a&lt;/code&gt;、&lt;code&gt;--quiet/-q&lt;/code&gt; 和 &lt;code&gt;--notify&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;内存--项目文档&#34;&gt;内存 &amp;amp; 项目文档
&lt;/h2&gt;&lt;p&gt;您可以使用 &lt;code&gt;AGENTS.md&lt;/code&gt; 文件为 Codex 提供额外的指令和指导。Codex 在以下位置查找 &lt;code&gt;AGENTS.md&lt;/code&gt; 文件，并自上而下合并它们：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt; - 个人全局指导&lt;/li&gt;
&lt;li&gt;存储库根目录下的 &lt;code&gt;AGENTS.md&lt;/code&gt; - 共享项目笔记&lt;/li&gt;
&lt;li&gt;当前工作目录中的 &lt;code&gt;AGENTS.md&lt;/code&gt; - 子文件夹/功能特定信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 &lt;code&gt;--no-project-doc&lt;/code&gt; 或环境变量 &lt;code&gt;CODEX_DISABLE_PROJECT_DOC=1&lt;/code&gt; 禁用这些文件的加载。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;非交互式--ci-模式&#34;&gt;非交互式 / CI 模式
&lt;/h2&gt;&lt;p&gt;在管道中以无头模式运行 Codex。GitHub Action 步骤示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Update changelog via Codex&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    npm install -g @openai/codex
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    export OPENAI_API_KEY=&amp;#34;${{ secrets.OPENAI_KEY }}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    codex -a auto-edit --quiet &amp;#34;update CHANGELOG for next release&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置 &lt;code&gt;CODEX_QUIET_MODE=1&lt;/code&gt; 以消除交互式 UI 噪音。&lt;/p&gt;
&lt;h2 id=&#34;追踪--详细日志&#34;&gt;追踪 / 详细日志
&lt;/h2&gt;&lt;p&gt;设置环境变量 &lt;code&gt;DEBUG=true&lt;/code&gt; 会打印完整的 API 请求和响应详细信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; codex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;使用示例&#34;&gt;使用示例
&lt;/h2&gt;&lt;p&gt;以下是一些您可以复制粘贴的小示例。将引号中的文本替换为您自己的任务。请参阅 &lt;a class=&#34;link&#34; href=&#34;https://github.com/openai/codex/blob/main/codex-cli/examples/prompting_guide.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;提示指南&lt;/a&gt; 了解更多提示和使用模式。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;✨&lt;/th&gt;
          &lt;th&gt;你输入的内容&lt;/th&gt;
          &lt;th&gt;发生的事情&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Refactor the Dashboard component to React Hooks&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Codex 重写类组件，运行 &lt;code&gt;npm test&lt;/code&gt;，并显示差异。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Generate SQL migrations for adding a users table&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;推断您的 ORM，创建迁移文件，并在沙盒 DB 中运行它们。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Write unit tests for utils/date.ts&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;生成测试，执行它们，并迭代直到它们通过。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Bulk-rename *.jpeg -&amp;gt; *.jpg with git mv&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;安全地重命名文件并更新导入/用法。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Explain what this regex does: ^(?=.*[A-Z]).{8,}$&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;输出逐步的人工解释。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Carefully review this repo, and propose 3 high impact well-scoped PRs&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;建议当前代码库中具有影响力的 PR。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;codex &amp;quot;Look for vulnerabilities and create a security review report&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;查找并解释安全漏洞。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装
&lt;/h2&gt;&lt;details open&gt;
&lt;summary&gt;&lt;strong&gt;从 npm 安装（推荐）&lt;/strong&gt;&lt;/summary&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g @openai/codex
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yarn global add @openai/codex
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bun install -g @openai/codex
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm add -g @openai/codex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;从源代码构建&lt;/strong&gt;&lt;/summary&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 克隆存储库并导航到 CLI 包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/openai/codex.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; codex/codex-cli
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启用 corepack&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;corepack &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装依赖项并构建&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm build
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 仅限 Linux：下载预构建的沙盒二进制文件（需要 gh 和 zstd）。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./scripts/install_native_deps.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 获取用法和选项&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;node ./dist/cli.js --help
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 直接运行本地构建的 CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;node ./dist/cli.js
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 或者为了方便起见，全局链接该命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm link
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;配置指南&#34;&gt;配置指南
&lt;/h2&gt;&lt;p&gt;Codex 配置文件可以放置在 &lt;code&gt;~/.codex/&lt;/code&gt; 目录中，支持 YAML 和 JSON 格式。&lt;/p&gt;
&lt;h3 id=&#34;基本配置参数&#34;&gt;基本配置参数
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;默认值&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;可用选项&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;model&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;o4-mini&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;要使用的 AI 模型&lt;/td&gt;
          &lt;td&gt;任何支持 OpenAI API 的模型名称&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;approvalMode&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;suggest&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;AI 助手的权限模式&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;suggest&lt;/code&gt;（仅建议）&lt;br&gt;&lt;code&gt;auto-edit&lt;/code&gt;（自动编辑）&lt;br&gt;&lt;code&gt;full-auto&lt;/code&gt;（完全自动）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;fullAutoErrorMode&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ask-user&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;完全自动模式下的错误处理&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ask-user&lt;/code&gt;（提示用户输入）&lt;br&gt;&lt;code&gt;ignore-and-continue&lt;/code&gt;（忽略并继续）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;boolean&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;启用桌面通知&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;自定义-ai-提供商配置&#34;&gt;自定义 AI 提供商配置
&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;providers&lt;/code&gt; 对象中，您可以配置多个 AI 服务提供商。每个提供商都需要以下参数：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;提供商的显示名称&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;OpenAI&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;baseURL&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;API 服务 URL&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;https://api.openai.com/v1&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;envKey&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;环境变量名称（用于 API 密钥）&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;OPENAI_API_KEY&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;历史记录配置&#34;&gt;历史记录配置
&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;history&lt;/code&gt; 对象中，您可以配置对话历史记录设置：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;示例值&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;maxSize&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;number&lt;/td&gt;
          &lt;td&gt;要保存的最大历史记录条目数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;1000&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;saveHistory&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;boolean&lt;/td&gt;
          &lt;td&gt;是否保存历史记录&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;sensitivePatterns&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;array&lt;/td&gt;
          &lt;td&gt;要在历史记录中过滤的敏感信息模式&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;配置示例&#34;&gt;配置示例
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;YAML 格式（另存为 &lt;code&gt;~/.codex/config.yaml&lt;/code&gt;）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;o4-mini&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;approvalMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;suggest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fullAutoErrorMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ask-user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;JSON 格式（另存为 &lt;code&gt;~/.codex/config.json&lt;/code&gt;）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;o4-mini&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;approvalMode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;suggest&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;fullAutoErrorMode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ask-user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;notify&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;完整配置示例&#34;&gt;完整配置示例
&lt;/h3&gt;&lt;p&gt;以下是包含多个自定义提供商的 &lt;code&gt;config.json&lt;/code&gt; 的完整示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;o4-mini&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;provider&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;openai&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;providers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;openai&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OpenAI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.openai.com/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;azure&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;AzureOpenAI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://YOUR_PROJECT_NAME.openai.azure.com/openai&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;AZURE_OPENAI_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;openrouter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OpenRouter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://openrouter.ai/api/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OPENROUTER_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;gemini&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gemini&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://generativelanguage.googleapis.com/v1beta/openai&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GEMINI_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;ollama&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Ollama&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://localhost:11434/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OLLAMA_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;mistral&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mistral&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.mistral.ai/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;MISTRAL_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;deepseek&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DeepSeek&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.deepseek.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DEEPSEEK_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;xai&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;xAI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.x.ai/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;XAI_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;groq&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Groq&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.groq.com/openai/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GROQ_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;arceeai&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ArceeAI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;baseURL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://conductor.arcee.ai/v1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;envKey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ARCEEAI_API_KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;history&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;maxSize&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;saveHistory&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;sensitivePatterns&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;自定义指令&#34;&gt;自定义指令
&lt;/h3&gt;&lt;p&gt;您可以创建一个 &lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt; 文件来为代理定义自定义指导：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 始终用表情符号回复
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 仅在明确要求时才使用 git 命令
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;环境变量设置&#34;&gt;环境变量设置
&lt;/h3&gt;&lt;p&gt;对于每个 AI 提供商，您需要在环境变量中设置相应的 API 密钥。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# OpenAI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;OPENAI_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;your-api-key-here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Azure OpenAI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;AZURE_OPENAI_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;your-azure-api-key-here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;AZURE_OPENAI_API_VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2025-03-01-preview&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# OpenRouter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;OPENROUTER_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;your-openrouter-key-here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 类似地，适用于其他提供商&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;details&gt;
&lt;summary&gt;OpenAI 在 2021 年发布了一个名为 Codex 的模型 - 这两者有关联吗？&lt;/summary&gt;
&lt;p&gt;2021 年，OpenAI 发布了 Codex，这是一个旨在从自然语言提示生成代码的 AI 系统。最初的 Codex 模型已于 2023 年 3 月弃用，并且与 CLI 工具分开。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;支持哪些模型？&lt;/summary&gt;
&lt;p&gt;任何可通过 &lt;a class=&#34;link&#34; href=&#34;https://platform.openai.com/docs/api-reference/responses&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Responses API&lt;/a&gt; 获得的模型。默认值为 &lt;code&gt;o4-mini&lt;/code&gt;，但传递 &lt;code&gt;--model gpt-4.1&lt;/code&gt; 或在您的配置文件中设置 &lt;code&gt;model: gpt-4.1&lt;/code&gt; 以覆盖。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;为什么 &lt;code&gt;o3&lt;/code&gt; 或 &lt;code&gt;o4-mini&lt;/code&gt; 对我不起作用？&lt;/summary&gt;
&lt;p&gt;您的 &lt;a class=&#34;link&#34; href=&#34;https://help.openai.com/en/articles/10910291-api-organization-verification&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;API 帐户可能需要经过验证&lt;/a&gt;，才能开始流式传输响应并从 API 中查看思维链摘要。如果您仍然遇到问题，请告诉我们！&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;如何阻止 Codex 编辑我的文件？&lt;/summary&gt;
&lt;p&gt;Codex 在沙盒中运行模型生成的命令。如果建议的命令或文件更改看起来不正确，您可以简单地键入 &lt;strong&gt;n&lt;/strong&gt; 来拒绝该命令或向模型提供反馈。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;它可以在 Windows 上运行吗？&lt;/summary&gt;
&lt;p&gt;不能直接运行。它需要 &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;适用于 Linux 的 Windows 子系统 (WSL2)&lt;/a&gt; - Codex 已在 macOS 和 Linux 上使用 Node 22 进行了测试。&lt;/p&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;零数据保留-zdr-用法&#34;&gt;零数据保留 (ZDR) 用法
&lt;/h2&gt;&lt;p&gt;Codex CLI &lt;strong&gt;确实&lt;/strong&gt;支持启用了 &lt;a class=&#34;link&#34; href=&#34;https://platform.openai.com/docs/guides/your-data#zero-data-retention&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;零数据保留 (ZDR)&lt;/a&gt; 的 OpenAI 组织。如果您的 OpenAI 组织已启用零数据保留，但您仍然遇到如下错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;OpenAI rejected the request. Error details: Status: 400, Code: unsupported_parameter, Type: invalid_request_error, Message: 400 Previous response cannot be used for this organization due to Zero Data Retention.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;您可能需要使用以下命令升级到更新的版本：&lt;code&gt;npm i -g @openai/codex@latest&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;codex-开源基金&#34;&gt;Codex 开源基金
&lt;/h2&gt;&lt;p&gt;我们很高兴推出一项 &lt;strong&gt;100 万美元的计划&lt;/strong&gt;，以支持使用 Codex CLI 和其他 OpenAI 模型的开源项目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资助金额最高为 &lt;strong&gt;25,000 美元&lt;/strong&gt; API 积分。&lt;/li&gt;
&lt;li&gt;应用程序将&lt;strong&gt;滚动审查&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;感兴趣？&lt;a class=&#34;link&#34; href=&#34;https://openai.com/form/codex-open-source-fund/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在此处申请&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;贡献&#34;&gt;贡献
&lt;/h2&gt;&lt;p&gt;该项目正在积极开发中，代码可能会发生相当大的变化。一旦完成，我们将更新此消息！&lt;/p&gt;
&lt;p&gt;更广泛地说，我们欢迎贡献 - 无论您是打开您的第一个 pull request，还是您是经验丰富的维护人员。同时，我们关心可靠性和长期可维护性，因此合并代码的门槛有意&lt;strong&gt;很高&lt;/strong&gt;。以下指南阐明了“高质量”在实践中的含义，并应使整个过程透明且友好。&lt;/p&gt;
&lt;h3 id=&#34;开发工作流程&#34;&gt;开发工作流程
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;从 &lt;code&gt;main&lt;/code&gt; 创建一个_主题分支_ - 例如 &lt;code&gt;feat/interactive-prompt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;保持您的更改集中。多个不相关的修复应作为单独的 PR 打开。&lt;/li&gt;
&lt;li&gt;在开发期间使用 &lt;code&gt;pnpm test:watch&lt;/code&gt; 以获得超快的反馈。&lt;/li&gt;
&lt;li&gt;我们使用 &lt;strong&gt;Vitest&lt;/strong&gt; 进行单元测试，使用 &lt;strong&gt;ESLint&lt;/strong&gt; + &lt;strong&gt;Prettier&lt;/strong&gt; 进行样式，使用 &lt;strong&gt;TypeScript&lt;/strong&gt; 进行类型检查。&lt;/li&gt;
&lt;li&gt;在推送之前，运行完整的测试/类型/lint 套件：&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;带有-husky-的-git-钩子&#34;&gt;带有 Husky 的 Git 钩子
&lt;/h3&gt;&lt;p&gt;该项目使用 &lt;a class=&#34;link&#34; href=&#34;https://typicode.github.io/husky/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Husky&lt;/a&gt; 来强制执行代码质量检查：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pre-commit 钩子&lt;/strong&gt;：在提交之前自动运行 lint-staged 以格式化和 lint 文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pre-push 钩子&lt;/strong&gt;：在推送到远程之前运行测试和类型检查&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些钩子有助于保持代码质量并防止推送具有失败测试的代码。有关更多详细信息，请参阅 &lt;a class=&#34;link&#34; href=&#34;./codex-cli/HUSKY.md&#34; &gt;HUSKY.md&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; pnpm run lint &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; pnpm run typecheck
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果您&lt;strong&gt;尚未&lt;/strong&gt;签署贡献者许可协议 (CLA)，请添加包含以下确切文本的 PR 评论&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;I have read the CLA Document and I hereby sign the CLA
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;CLA-Assistant 机器人将在所有作者都签名后将 PR 状态变为绿色。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 观察模式（测试在更改时重新运行）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm test:watch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在不发出文件的情况下进行类型检查&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm typecheck
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 自动修复 lint + prettier 问题&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm lint:fix
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm format:fix
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;调试&#34;&gt;调试
&lt;/h3&gt;&lt;p&gt;要使用可视化调试器调试 CLI，请在 &lt;code&gt;codex-cli&lt;/code&gt; 文件夹中执行以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行 &lt;code&gt;pnpm run build&lt;/code&gt; 以构建 CLI，这将在 &lt;code&gt;dist&lt;/code&gt; 文件夹中的 &lt;code&gt;cli.js&lt;/code&gt; 旁边生成 &lt;code&gt;cli.js.map&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;node --inspect-brk ./dist/cli.js&lt;/code&gt; 运行 CLI。然后，程序会等到连接调试器后再继续。选项：
&lt;ul&gt;
&lt;li&gt;在 VS Code 中，从命令面板中选择&lt;strong&gt;Debug: Attach to Node Process&lt;/strong&gt;，然后在下拉列表中选择调试端口 &lt;code&gt;9229&lt;/code&gt; 的选项（可能是第一个选项）&lt;/li&gt;
&lt;li&gt;在 Chrome 中转到 &lt;a class=&#34;link&#34; href=&#34;chrome://inspect&#34; &gt;chrome://inspect&lt;/a&gt;，找到 &lt;strong&gt;localhost:9229&lt;/strong&gt;，然后单击&lt;strong&gt;trace&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;编写高影响力的代码更改&#34;&gt;编写高影响力的代码更改
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;从 issue 开始。&lt;/strong&gt; 打开一个新的 issue 或在现有的讨论中发表评论，以便我们在编写代码之前就解决方案达成一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;添加或更新测试。&lt;/strong&gt; 每个新功能或错误修复都应该附带测试覆盖，该测试覆盖在您的更改之前失败并在之后通过。不需要 100% 覆盖，但目标是进行有意义的断言。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记录行为。&lt;/strong&gt; 如果您的更改会影响面向用户的行为，请更新 README、内联帮助 (&lt;code&gt;codex --help&lt;/code&gt;) 或相关示例项目。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保持提交原子性。&lt;/strong&gt; 每次提交都应该编译并且测试应该通过。这使得审查和潜在的回滚更容易。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;打开一个-pull-request&#34;&gt;打开一个 Pull Request
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;填写 PR 模板（或包括类似信息）- &lt;strong&gt;什么？为什么？怎么做？&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在本地运行&lt;strong&gt;所有&lt;/strong&gt;检查 (&lt;code&gt;npm test &amp;amp;&amp;amp; npm run lint &amp;amp;&amp;amp; npm run typecheck&lt;/code&gt;)。本可以在本地捕获的 CI 失败会减慢该过程。&lt;/li&gt;
&lt;li&gt;确保您的分支与 &lt;code&gt;main&lt;/code&gt; 保持最新，并且您已解决合并冲突。&lt;/li&gt;
&lt;li&gt;仅当您认为 PR 处于可合并状态时，才将其标记为&lt;strong&gt;准备好审查&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;审查流程&#34;&gt;审查流程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;一位维护人员将被分配为主要审查员。&lt;/li&gt;
&lt;li&gt;我们可能会要求进行更改 - 请不要对此感到不快。我们重视工作，我们只是也重视一致性和长期可维护性。&lt;/li&gt;
&lt;li&gt;当达成共识认为 PR 符合标准时，维护人员将 squash-and-merge。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;社区价值观&#34;&gt;社区价值观
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;友善和包容。&lt;/strong&gt; 尊重他人；我们遵循 &lt;a class=&#34;link&#34; href=&#34;https://www.contributor-covenant.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;贡献者盟约&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;假设良好的意图。&lt;/strong&gt; 书面沟通很难 - 倾向于慷慨。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;教学与学习。&lt;/strong&gt; 如果您发现任何令人困惑的事情，请打开一个 issue 或 PR 进行改进。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;获取帮助&#34;&gt;获取帮助
&lt;/h3&gt;&lt;p&gt;如果您在设置项目时遇到问题，想要获得关于想法的反馈，或者只是想说 &lt;em&gt;hi&lt;/em&gt; - 请打开一个讨论或跳到相关的 issue 中。我们很乐意提供帮助。&lt;/p&gt;
&lt;p&gt;我们可以一起使 Codex CLI 成为一个令人难以置信的工具。&lt;strong&gt;祝你黑客愉快！&lt;/strong&gt; :rocket:&lt;/p&gt;
&lt;h3 id=&#34;贡献者许可协议-cla&#34;&gt;贡献者许可协议 (CLA)
&lt;/h3&gt;&lt;p&gt;所有贡献者&lt;strong&gt;必须&lt;/strong&gt;接受 CLA。该过程很简单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开您的 pull request。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;粘贴以下评论（如果您之前已签名，请回复 &lt;code&gt;recheck&lt;/code&gt;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;I have read the CLA Document and I hereby sign the CLA
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CLA-Assistant 机器人会在存储库中记录您的签名并将状态检查标记为已通过。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不需要特殊的 Git 命令、电子邮件附件或提交脚注。&lt;/p&gt;
&lt;h4 id=&#34;快速修复&#34;&gt;快速修复
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;场景&lt;/th&gt;
          &lt;th&gt;命令&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;修改上次提交&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;git commit --amend -s --no-edit &amp;amp;&amp;amp; git push -f&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;DCO 检查&lt;/strong&gt;会阻止合并，直到 PR 中的每次提交都带有脚注（通过 squash 这只是一个）。&lt;/p&gt;
&lt;h3 id=&#34;发布-codex&#34;&gt;发布 &lt;code&gt;codex&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;要发布 CLI 的新版本，您首先需要暂存 npm 包。&lt;code&gt;codex-cli/scripts/&lt;/code&gt; 中的一个辅助脚本可以完成所有繁重的工作。在 &lt;code&gt;codex-cli&lt;/code&gt; 文件夹中运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 经典、JS 实现，包括用于 Linux 沙盒的小型原生二进制文件。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm stage-release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# （可选）指定在运行之间重用的临时目录。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;mktemp -d&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm stage-release --tmp &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$RELEASE_DIR&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# “胖”包，另外捆绑了用于 Linux 的原生 Rust CLI 二进制文件。最终用户可以通过设置 CODEX_RUST=1 在运行时选择加入。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm stage-release --native
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;转到暂存发布版本的文件夹，并验证它是否按预期工作。如果是，请从临时文件夹中运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd &amp;#34;$RELEASE_DIR&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm publish
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;替代构建选项&#34;&gt;替代构建选项
&lt;/h3&gt;&lt;h4 id=&#34;nix-flake-开发&#34;&gt;Nix flake 开发
&lt;/h4&gt;&lt;p&gt;先决条件：启用了 flakes 的 Nix &amp;gt;= 2.4（&lt;code&gt;experimental-features = nix-command flakes&lt;/code&gt; 在 &lt;code&gt;~/.config/nix/nix.conf&lt;/code&gt; 中）。&lt;/p&gt;
&lt;p&gt;进入 Nix 开发 shell：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 根据要使用的实现，使用以下任一命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nix develop .#codex-cli &lt;span class=&#34;c1&#34;&gt;# 用于进入 codex-cli 特定 shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nix develop .#codex-rs &lt;span class=&#34;c1&#34;&gt;# 用于进入 codex-rs 特定 shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此 shell 包含 Node.js，安装依赖项，构建 CLI，并提供 &lt;code&gt;codex&lt;/code&gt; 命令别名。&lt;/p&gt;
&lt;p&gt;直接构建并运行 CLI：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 根据要使用的实现，使用以下任一命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nix build .#codex-cli &lt;span class=&#34;c1&#34;&gt;# 用于构建 codex-cli&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nix build .#codex-rs &lt;span class=&#34;c1&#34;&gt;# 用于构建 codex-rs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./result/bin/codex --help
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过 flake 应用程序运行 CLI：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 根据要使用的实现，使用以下任一命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nix run .#codex-cli &lt;span class=&#34;c1&#34;&gt;# 用于运行 codex-cli&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nix run .#codex-rs &lt;span class=&#34;c1&#34;&gt;# 用于运行 codex-rs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将 direnv 与 flakes 一起使用&lt;/p&gt;
&lt;p&gt;如果您已安装 direnv，则可以使用以下 &lt;code&gt;.envrc&lt;/code&gt; 在您 &lt;code&gt;cd&lt;/code&gt; 进入项目目录时自动进入 Nix shell：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; codex-rs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;use flake ../flake.nix#codex-cli&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .envrc &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; direnv allow
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; codex-cli
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;use flake ../flake.nix#codex-rs&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .envrc &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; direnv allow
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
